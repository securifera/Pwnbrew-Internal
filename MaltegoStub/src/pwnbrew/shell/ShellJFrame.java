/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pwnbrew.shell;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.WindowEvent;
import pwnbrew.misc.Constants;
import pwnbrew.misc.Utilities;

/**
 *
 * @author user
 */
public class ShellJFrame extends javax.swing.JFrame {
    
    private ShellJPanel mainPanel;
    private final ShellJPanelListener theShellJPanelListener;

    /**
     * Creates new form ShellJFrame
     * @param passedListener
     */
    public ShellJFrame( ShellJPanelListener passedListener) {
        theShellJPanelListener = passedListener;
        initComponents();
        initializeComponents();
    }

    private void initializeComponents(){
                      
        //Set the icon
        Image appIcon = Utilities.loadImageFromJar( Constants.TERM_IMG_STR );
        if( appIcon != null )
            setIconImage( appIcon );   
        
        mainPanel = new ShellJPanel(theShellJPanelListener);

        //Pack and show
        setContentPane(mainPanel);
    }
    
    private void closeWindow(){
        dispose();
        theShellJPanelListener.beNotified();
        ((ShellJPanel)mainPanel).disablePanel( true );
    }
    
    // ==========================================================================
    /**
    * Processes {@link WindowEvent}s occurring on this component.
    * @param event the {@code WindowEvent}
    */
    @Override //Overrides JFrame.processWindowEvent( WindowEvent )
    protected void processWindowEvent( WindowEvent event ) {
        if( WindowEvent.WINDOW_CLOSING == event.getID() ) { //If the event is the window closing...
           closeWindow();
        } else { //If the event is not the window closing...
            super.processWindowEvent( event ); //Proceed normally
        } 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        shellMenuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenu = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        optionsMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(710, 560));

        fileMenu.setText("File");

        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenu);

        shellMenuBar.add(fileMenu);

        editMenu.setText("Edit");

        optionsMenu.setText("Settings");
        optionsMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionsMenuActionPerformed(evt);
            }
        });
        editMenu.add(optionsMenu);

        shellMenuBar.add(editMenu);

        setJMenuBar(shellMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        closeWindow();
    }//GEN-LAST:event_exitMenuActionPerformed

    private void optionsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionsMenuActionPerformed
        ShellSettingsJDialog aDialog = new ShellSettingsJDialog(theShellJPanelListener, true);
        aDialog.setVisible(true);
    }//GEN-LAST:event_optionsMenuActionPerformed

    //==========================================================================
    /**
     * 
     * @return 
     */
    public ShellJPanel getShellPanel() {
        return  (ShellJPanel)mainPanel;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem optionsMenu;
    private javax.swing.JMenuBar shellMenuBar;
    // End of variables declaration//GEN-END:variables
}
